stages:
  - pre-build
  - build
  - test


.docker-build-tmpl: &docker-build-tmpl
  stage: build
  image: ${CI_REGISTRY_IMAGE}/docker-builder:latest
  services:
    - docker:dind
  script:
    - git fetch --tags
#    - docker login -u "${CI_REGISTRY_USER?}" -p "${CI_REGISTRY_PASSWORD?}" "${CI_REGISTRY?}"
#    - ./build-docker.sh "${ARCHITECTURE}" "${CI_REGISTRY_IMAGE}" --push
    - VERSION="$(git describe --tags --always)"
    - VERSION="${VERSION%-*-*}"
    - RELEASE=$(jq -r .release < etc/ncp.cfg)
    - '[[ "${ARCHITECTURE?}" == "x86"   ]] && { ARCH=amd64; ARCH_QEMU=x86_64; NCP_TAG=x86; }'
    - '[[ "${ARCHITECTURE?}" == "armhf"   ]] && { ARCH=arm32v7; ARCH_QEMU=arm; NCP_TAG=armhf; }'
    - '[[ "${ARCHITECTURE?}" == "arm64"   ]] && { ARCH=arm64v8; ARCH_QEMU=aarch64; NCP_TAG=arm64; }'
    - docker login -u "${CI_REGISTRY_USER?}" -p "${CI_REGISTRY_PASSWORD?}" "${CI_REGISTRY?}"
    - docker pull ${CI_REGISTRY_IMAGE}/debian-ncp-${NCP_TAG?}:latest
    - docker pull ${CI_REGISTRY_IMAGE}/lamp-${NCP_TAG?}:latest
    - docker pull ${CI_REGISTRY_IMAGE}/nextcloud-${NCP_TAG?}:latest
    - docker pull ${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:latest
    - >
      DOCKER_BUILDKIT=1 docker build --progress=plain . -f docker/debian-ncp/Dockerfile --pull
      --build-arg release=${RELEASE?} --build-arg arch=${ARCH?} --build-arg arch_qemu=${ARCH_QEMU?}
      -t "${CI_REGISTRY_IMAGE?}/debian-ncp-${NCP_TAG?}:latest"
      -t "${CI_REGISTRY_IMAGE?}/debian-ncp-${NCP_TAG?}:${CI_PIPELINE_IID}"
      -t "${CI_REGISTRY_IMAGE?}/debian-ncp-${NCP_TAG?}:${VERSION?}"
    - >
      DOCKER_BUILDKIT=1 docker build --progress=plain . -f docker/lamp/Dockerfile
      --build-arg release=${RELEASE?} --build-arg arch=${NCP_TAG?}
      -t "${CI_REGISTRY_IMAGE?}/lamp-${NCP_TAG?}:latest"
      -t "${CI_REGISTRY_IMAGE?}/lamp-${NCP_TAG?}:${CI_PIPELINE_IID}"
      -t "${CI_REGISTRY_IMAGE?}/lamp-${NCP_TAG?}:${VERSION?}"
    - >
      DOCKER_BUILDKIT=1 docker build --progress=plain . -f docker/nextcloud/Dockerfile
      --build-arg release=${RELEASE?} --build-arg arch=${NCP_TAG?}
      -t "${CI_REGISTRY_IMAGE?}/nextcloud-${NCP_TAG?}:latest"
      -t "${CI_REGISTRY_IMAGE?}/nextcloud-${NCP_TAG}:${CI_PIPELINE_IID}"
      -t "${CI_REGISTRY_IMAGE}/nextcloud-${NCP_TAG?}:${VERSION?}"
    - >
      DOCKER_BUILDKIT=1 docker build --progress=plain . -f docker/nextcloudpi/Dockerfile
      --build-arg release=${RELEASE?} --build-arg arch=${NCP_TAG?} --build-arg ncp_ver=${VERSION?}
      -t "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:latest"
      -t "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:${CI_PIPELINE_IID}"
      -t "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:${VERSION?}"
    - docker push ${CI_REGISTRY_IMAGE}/debian-ncp-${NCP_TAG?}
    - docker push ${CI_REGISTRY_IMAGE}/lamp-${NCP_TAG?}
    - docker push ${CI_REGISTRY_IMAGE}/nextcloud-${NCP_TAG?}
    - docker push ${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}

.integration-tests-docker-tmpl: &integration-tests-docker-tmpl
  stage: pre-build
  services:
    - name: selenium/standalone-firefox
      alias: selenium
    - name: "${CI_REGISTRY_IMAGE}/nextcloudpi-${ARCHITECTURE}:${CI_PIPELINE_IID}"
      alias: nextcloudpi
  image: python:3.8
  script:
    - ./tests/activation_tests.py "nextcloudpi" "selenium"
    - ./tests/nextcloudpi_tests.py "nextcloudpi" "selenium"

.system-test-docker-tmpl: &system-test-docker-tmpl
  stage: pre-build
  image: "${CI_REGISTRY_IMAGE}/nextcloudpi-${ARCHITECTURE}:${CI_PIPELINE_IID}"
  script:
    - ./tests/sysyem_tests.py

integration-tests-docker-amd64:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "x86"

integration-tests-docker-armhf:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "armhf"

integration-tests-docker-arm64:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "arm64"

system-tests-docker-amd64:
  << : *system-test-docker-tmpl
  variables:
    ARCHITECTURE: "amd64"

docker-build-amd64:
  << : *docker-build-tmpl
  variables:
    ARCHITECTURE: "x86"

docker-build-armhf:
  <<: *docker-build-tmpl
  variables:
    ARCHITECTURE: "armhf"

docker-build-arm64:
  <<: *docker-build-tmpl
  variables:
    ARCHITECTURE: "arm64"

docker-build-docker-builder:
  stage: pre-build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/docker-builder:latest || echo "docker-builder:latest not found in \"${CI_REGISTRY_IMAGE}\"!"
    - CURRENT="$(docker inspect -f '{{ .DockerVersion }}' ${CI_REGISTRY_IMAGE}/docker-builder:latest)"
    - LATEST="$(docker version -f '{{ .Client.Version }}')"
    - echo "$CURRENT"
    - echo "$LATEST"
    - |
      if [[ "$CURRENT" != "$LATEST" ]]
      then
        docker build --progress=plain . -f ci/images/docker-builder/Dockerfile -t "${CI_REGISTRY_IMAGE}/docker-builder:latest"
        docker login -u "${CI_REGISTRY_USER?}" -p "${CI_REGISTRY_PASSWORD?}" "${CI_REGISTRY?}"
        docker push "${CI_REGISTRY_IMAGE}/docker-builder:latest"
      fi
